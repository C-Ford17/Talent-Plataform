
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 * 
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'
import { fileURLToPath } from 'node:url'
globalThis['__dirname'] = path.dirname(fileURLToPath(import.meta.url))

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
export * from "./enums"
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.account.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<LogOpts extends Prisma.LogLevel = never, OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"], ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node")
path.join(process.cwd(), "src/generated/prisma/query_engine-windows.dll.node")

/**
 * Model Account
 * 
 */
export type Account = Prisma.AccountModel
/**
 * Model Session
 * 
 */
export type Session = Prisma.SessionModel
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = Prisma.VerificationTokenModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model CitizenProfile
 * 
 */
export type CitizenProfile = Prisma.CitizenProfileModel
/**
 * Model CompanyProfile
 * 
 */
export type CompanyProfile = Prisma.CompanyProfileModel
/**
 * Model InstitutionProfile
 * 
 */
export type InstitutionProfile = Prisma.InstitutionProfileModel
/**
 * Model Skill
 * 
 */
export type Skill = Prisma.SkillModel
/**
 * Model CitizenSkill
 * 
 */
export type CitizenSkill = Prisma.CitizenSkillModel
/**
 * Model Education
 * 
 */
export type Education = Prisma.EducationModel
/**
 * Model Experience
 * 
 */
export type Experience = Prisma.ExperienceModel
/**
 * Model Certification
 * 
 */
export type Certification = Prisma.CertificationModel
